import {
  View,
  Text,
  ScrollView,
  StyleSheet,
  SafeAreaView,
  TouchableOpacity,
} from 'react-native';
import { useSafeAreaInsets } from 'react-native-safe-area-context';
import { colors, typography, spacing, borderRadius, shadows, globalStyles } from '../styles/theme';

const HowToPlayScreen = ({ navigation }) => {
  const insets = useSafeAreaInsets();
  const sections = [
    {
      title: 'üéØ Objetivo do Jogo',
      content: 'Teste seus conhecimentos sobre metabolismo e sistemas biol√≥gicos atrav√©s de um quiz com dicas progressivas. Quanto menos dicas usar, mais pontos voc√™ ganha!',
    },
    {
      title: 'üéÆ Modos de Jogo',
      content: [
        '‚Ä¢ Modo Individual: Jogue sozinho e teste seus conhecimentos',
        '‚Ä¢ Duelo R√°pido: 10 cartas aleat√≥rias para uma partida r√°pida',
        '‚Ä¢ Pr√°tica Focada: Escolha um sistema espec√≠fico para estudar',
        '‚Ä¢ Modo Dupla: Jogue com um amigo no sistema "Passa e Joga"',
      ],
    },
    {
      title: 'üí° Sistema de Dicas',
      content: [
        'Cada carta possui 3 dicas progressivas:',
        '‚Ä¢ Dica 1: Mais dif√≠cil - 15 pontos',
        '‚Ä¢ Dica 2: M√©dia dificuldade - 10 pontos',
        '‚Ä¢ Dica 3: Mais f√°cil - 5 pontos',
        '',
        'Voc√™ tem 3 tentativas por dica antes de passar para a pr√≥xima.',
      ],
    },
    {
      title: 'üéØ Como Jogar',
      content: [
        '1. Leia a primeira dica com aten√ß√£o',
        '2. Digite sua resposta no campo de texto',
        '3. Pressione "Adivinhar" para verificar',
        '4. Se errar, tente novamente ou solicite uma nova dica',
        '5. Ap√≥s acertar ou esgotar as dicas, leia a explica√ß√£o educacional',
        '6. Continue para a pr√≥xima carta',
      ],
    },
    {
      title: 'üìä Pontua√ß√£o',
      content: [
        'Sua pontua√ß√£o depende de quantas dicas voc√™ usou:',
        '‚Ä¢ Acertou na 1¬™ dica: 15 pontos',
        '‚Ä¢ Acertou na 2¬™ dica: 10 pontos',
        '‚Ä¢ Acertou na 3¬™ dica: 5 pontos',
        '‚Ä¢ N√£o acertou: 0 pontos',
        '',
        'No modo dupla, os jogadores alternam turnos e competem pela maior pontua√ß√£o.',
      ],
    },
    {
      title: 'üèÜ Dicas de Estudo',
      content: [
        '‚Ä¢ Leia cada dica com calma e pense antes de responder',
        '‚Ä¢ Use o modo Pr√°tica Focada para estudar temas espec√≠ficos',
        '‚Ä¢ Preste aten√ß√£o nas explica√ß√µes para aprender mais',
        '‚Ä¢ Revise suas respostas na tela de resultados',
        '‚Ä¢ Jogue regularmente para fixar o conhecimento',
      ],
    },
  ];

  return (
    <SafeAreaView style={globalStyles.safeArea}>
      <View style={styles.container}>
        {/* Header */}
        <View style={styles.header}>
          <Text style={styles.title}>Como Jogar</Text>
          <Text style={styles.subtitle}>
            Guia completo do Duelo Metab√≥lico
          </Text>
        </View>

        {/* Content */}
        <ScrollView 
          style={styles.scrollView}
          showsVerticalScrollIndicator={false}
          contentContainerStyle={styles.scrollContent}
        >
          {sections.map((section, index) => (
            <View key={index} style={styles.section}>
              <Text style={styles.sectionTitle}>{section.title}</Text>
              <View style={styles.sectionContent}>
                {Array.isArray(section.content) ? (
                  section.content.map((item, itemIndex) => (
                    <Text key={itemIndex} style={styles.sectionText}>
                      {item}
                    </Text>
                  ))
                ) : (
                  <Text style={styles.sectionText}>{section.content}</Text>
                )}
              </View>
            </View>
          ))}

          {/* Tips Box */}
          <View style={styles.tipsBox}>
            <Text style={styles.tipsTitle}>üí° Dica Especial</Text>
            <Text style={styles.tipsText}>
              As respostas n√£o diferenciam mai√∫sculas de min√∫sculas e ignoram acentos. 
              Voc√™ pode digitar "glicose" ou "Glicose" que ambas ser√£o aceitas!
            </Text>
          </View>
        </ScrollView>

        {/* Footer Button */}
        <View style={[styles.footer, { paddingBottom: Math.max(insets.bottom, spacing.md) }]}>
          <TouchableOpacity
            style={globalStyles.button}
            onPress={() => navigation.goBack()}
          >
            <Text style={globalStyles.buttonText}>Entendi, Vamos Jogar!</Text>
          </TouchableOpacity>
        </View>
      </View>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: colors.background,
  },
  header: {
    paddingHorizontal: spacing.lg,
    paddingTop: spacing.lg,
    paddingBottom: spacing.md,
    alignItems: 'center',
  },
  title: {
    ...typography.title,
    color: colors.primary,
    marginBottom: spacing.xs,
  },
  subtitle: {
    ...typography.body,
    color: colors.textSecondary,
    textAlign: 'center',
  },
  scrollView: {
    flex: 1,
  },
  scrollContent: {
    paddingHorizontal: spacing.lg,
    paddingBottom: spacing.lg,
  },
  section: {
    marginBottom: spacing.lg,
  },
  sectionTitle: {
    ...typography.subtitle,
    color: colors.primary,
    marginBottom: spacing.sm,
  },
  sectionContent: {
    backgroundColor: colors.backgroundAlt,
    borderRadius: borderRadius.md,
    padding: spacing.md,
    borderLeftWidth: 4,
    borderLeftColor: colors.primary,
  },
  sectionText: {
    ...typography.body,
    lineHeight: 22,
    marginBottom: spacing.xs,
  },
  tipsBox: {
    backgroundColor: colors.secondary,
    borderRadius: borderRadius.md,
    padding: spacing.md,
    marginTop: spacing.md,
    ...shadows.small,
  },
  tipsTitle: {
    ...typography.subtitle,
    color: colors.textLight,
    marginBottom: spacing.sm,
  },
  tipsText: {
    ...typography.body,
    color: colors.textLight,
    lineHeight: 22,
  },
  footer: {
    paddingHorizontal: spacing.lg,
    paddingVertical: spacing.lg,
    backgroundColor: colors.background,
    borderTopWidth: 1,
    borderTopColor: colors.border,
  },
});

export default HowToPlayScreen;